### 清洗数据，选择日期
clean_data <- function(data, date_range){
### 去除其他地区的
df = df[df["站点"] !="其他", ]
df$日期 = as.Date(df$日期, format="%Y%m%d")
start = input$dates_range[1]
date_end = input$dates_range[2]
selectdf = df[ df$日期 >= start & df$日期 <= date_end, ]
selectdf
}
### 增加指标
stat_data <- function(data){
g = group_by(data, 日期)
res = summarise(g,
uv = sum(uv),
click_uv = sum(点击uv),
add2cart_uv = sum(加购买家数),
add2cart_amt = sum(加购支付金额),
ords = sum(加购支付买家数),
total_ords = sum(无线非生鲜下单用户数)
)
res["加购率"] = res["add2cart_uv"] / res["uv"]
res["订单转换率"] = res["ords"] / res["add2cart_uv"]
res["平均加购金额"] = res["add2cart_amt"] / res["uv"]
res["点击率"] = res["click_uv"] / res["uv"]
res["订单用户占比"] = res["ords"] / res["total_ords"]
res["show_stat"] = res[input$selectStat]
res
}
output$add2cartRatePlot <- renderPlot({
selectdf = clean_data(data, input$dates_range)
res = stat_data(selectdf)
ggplot(res, aes(x=日期, y = show_stat ) ) +
geom_point(colour = 'red', size = 3) + geom_line(colour = "blue", size = 2)  + labs(x="date", y = input$selectStat, family="Kaiti")
})
output$datashow <- renderDataTable({
data
},options = list(aLengthMenu = c(5, 30, 50), iDisplayLength = 5))
}
shinyApp(ui, server)
shinyApp(ui, server)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "大家都在买"),
dashboardSidebar(
sidebarMenu(
menuItem("点击效果", tabName = "点击效果", icon = icon("dashboard")),
menuItem("数据", tabName = "数据", icon = icon("th"))
)
),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "点击效果",
fluidRow(
box(plotOutput("add2cartRatePlot", height = 250)),
box(
title = "Controls",
dateRangeInput("dates_range",
start  = "2015-05-20",
end = Sys.Date() -1,
label = h3("Date range"))
),
box(
title = "Controls",
selectInput("selectStat", label = h3("选择指标"),
choices = list("加购率" = "加购率",
"平均加购金额" = "平均加购金额",
"点击率" = "点击率",
"订单用户占比" = "订单用户占比",
"点击uv" = "click_uv",
"uv" = "uv",
"加购买家数" = "add2cart_uv",
"加购支付买家数" = "ords",
"无线非生鲜下单用户数"="total_ords"
),
selected = "加购率")
)
)
),
# Second tab content
tabItem(tabName = "数据",
h2("Widgets tab content"),
box(
title = "date",
dataTableOutput('datashow')
)
)
)
)
)
server <- function(input, output) {
### 清洗数据，选择日期
clean_data <- function(data, date_range){
### 去除其他地区的
df = df[df["站点"] !="其他", ]
df$日期 = as.Date(df$日期, format="%Y%m%d")
start = input$dates_range[1]
date_end = input$dates_range[2]
selectdf = df[ df$日期 >= start & df$日期 <= date_end, ]
selectdf
}
### 增加指标
stat_data <- function(data){
g = group_by(data, 日期)
res = summarise(g,
uv = sum(uv),
click_uv = sum(点击uv),
add2cart_uv = sum(加购买家数),
add2cart_amt = sum(加购支付金额),
ords = sum(加购支付买家数),
total_ords = sum(无线非生鲜下单用户数)
)
res["加购率"] = res["add2cart_uv"] / res["uv"]
res["订单转换率"] = res["ords"] / res["add2cart_uv"]
res["平均加购金额"] = res["add2cart_amt"] / res["uv"]
res["点击率"] = res["click_uv"] / res["uv"]
res["订单用户占比"] = res["ords"] / res["total_ords"]
res["show_stat"] = res[input$selectStat]
res
}
output$add2cartRatePlot <- renderPlot({
selectdf = clean_data(data, input$dates_range)
res = stat_data(selectdf)
ggplot(res, aes(x=日期, y = show_stat ) ) +
geom_point(colour = 'red', size = 3) + geom_line(colour = "blue", size = 2)  + labs(x="date", y = input$selectStat, family="Kaiti")
})
output$datashow <- renderDataTable({
data
},options = list(aLengthMenu = c(5, 30, 50), iDisplayLength = 5))
}
shinyApp(ui, server)
?box
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "大家都在买"),
dashboardSidebar(
sidebarMenu(
menuItem("点击效果", tabName = "点击效果", icon = icon("dashboard")),
menuItem("数据", tabName = "数据", icon = icon("th"))
)
),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "点击效果",
fluidRow(
box(plotOutput("add2cartRatePlot", height = 300,width = 500)),
box(
title = "Controls",  width = 3
dateRangeInput("dates_range",
start  = "2015-05-20",
end = Sys.Date() -1,
label = h3("Date range"))
),
box(
title = "Controls",  width = 3
selectInput("selectStat", label = h3("选择指标"),
choices = list("加购率" = "加购率",
"平均加购金额" = "平均加购金额",
"点击率" = "点击率",
"订单用户占比" = "订单用户占比",
"点击uv" = "click_uv",
"uv" = "uv",
"加购买家数" = "add2cart_uv",
"加购支付买家数" = "ords",
"无线非生鲜下单用户数"="total_ords"
),
selected = "加购率")
)
)
),
# Second tab content
tabItem(tabName = "数据",
h2("Widgets tab content"),
box(
title = "date",
dataTableOutput('datashow')
)
)
)
)
)
server <- function(input, output) {
### 清洗数据，选择日期
clean_data <- function(data, date_range){
### 去除其他地区的
df = df[df["站点"] !="其他", ]
df$日期 = as.Date(df$日期, format="%Y%m%d")
start = input$dates_range[1]
date_end = input$dates_range[2]
selectdf = df[ df$日期 >= start & df$日期 <= date_end, ]
selectdf
}
### 增加指标
stat_data <- function(data){
g = group_by(data, 日期)
res = summarise(g,
uv = sum(uv),
click_uv = sum(点击uv),
add2cart_uv = sum(加购买家数),
add2cart_amt = sum(加购支付金额),
ords = sum(加购支付买家数),
total_ords = sum(无线非生鲜下单用户数)
)
res["加购率"] = res["add2cart_uv"] / res["uv"]
res["订单转换率"] = res["ords"] / res["add2cart_uv"]
res["平均加购金额"] = res["add2cart_amt"] / res["uv"]
res["点击率"] = res["click_uv"] / res["uv"]
res["订单用户占比"] = res["ords"] / res["total_ords"]
res["show_stat"] = res[input$selectStat]
res
}
output$add2cartRatePlot <- renderPlot({
selectdf = clean_data(data, input$dates_range)
res = stat_data(selectdf)
ggplot(res, aes(x=日期, y = show_stat ) ) +
geom_point(colour = 'red', size = 3) + geom_line(colour = "blue", size = 2)  + labs(x="date", y = input$selectStat, family="Kaiti")
})
output$datashow <- renderDataTable({
data
},options = list(aLengthMenu = c(5, 30, 50), iDisplayLength = 5))
}
shinyApp(ui, server)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "大家都在买"),
dashboardSidebar(
sidebarMenu(
menuItem("点击效果", tabName = "点击效果", icon = icon("dashboard")),
menuItem("明细数据", tabName = "数据", icon = icon("th"))
)
),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "点击效果",
fluidRow(
box(plotOutput("add2cartRatePlot", height = 500,width = 600)),
box(
title = "Controls",  width = 3, background = "light-blue",
dateRangeInput("dates_range",
start  = "2015-05-20",
end = Sys.Date() -1,
label = h3("Date range"))
),
box(
title = "Controls",  width = 3, background = "light-blue",
selectInput("selectStat", label = h3("选择指标"),
choices = list("加购率" = "加购率",
"平均加购金额" = "平均加购金额",
"点击率" = "点击率",
"订单用户占比" = "订单用户占比",
"点击uv" = "click_uv",
"uv" = "uv",
"加购买家数" = "add2cart_uv",
"加购支付买家数" = "ords",
"无线非生鲜下单用户数"="total_ords"
),
selected = "加购率")
)
)
),
# Second tab content
tabItem(tabName = "明细数据",
h2("Widgets tab content"),
box(
title = "date",
dataTableOutput('datashow')
)
)
)
)
)
server <- function(input, output) {
### 清洗数据，选择日期
clean_data <- function(data, date_range){
### 去除其他地区的
df = df[df["站点"] !="其他", ]
df$日期 = as.Date(df$日期, format="%Y%m%d")
start = input$dates_range[1]
date_end = input$dates_range[2]
selectdf = df[ df$日期 >= start & df$日期 <= date_end, ]
selectdf
}
### 增加指标
stat_data <- function(data){
g = group_by(data, 日期)
res = summarise(g,
uv = sum(uv),
click_uv = sum(点击uv),
add2cart_uv = sum(加购买家数),
add2cart_amt = sum(加购支付金额),
ords = sum(加购支付买家数),
total_ords = sum(无线非生鲜下单用户数)
)
res["加购率"] = res["add2cart_uv"] / res["uv"]
res["订单转换率"] = res["ords"] / res["add2cart_uv"]
res["平均加购金额"] = res["add2cart_amt"] / res["uv"]
res["点击率"] = res["click_uv"] / res["uv"]
res["订单用户占比"] = res["ords"] / res["total_ords"]
res["show_stat"] = res[input$selectStat]
res
}
output$add2cartRatePlot <- renderPlot({
selectdf = clean_data(data, input$dates_range)
res = stat_data(selectdf)
ggplot(res, aes(x=日期, y = show_stat ) ) +
geom_point(colour = 'red', size = 3) + geom_line(colour = "blue", size = 2)  + labs(x="date", y = input$selectStat, family="Kaiti")
})
output$datashow <- renderDataTable({
data
},options = list(aLengthMenu = c(5, 30, 50), iDisplayLength = 5))
}
shinyApp(ui, server)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "大家都在买"),
dashboardSidebar(
sidebarMenu(
menuItem("点击效果", tabName = "点击效果", icon = icon("dashboard")),
menuItem("明细数据", tabName = "明细数据", icon = icon("th"))
)
),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "点击效果",
fluidRow(
box(plotOutput("add2cartRatePlot", height = 500,width = 600)),
box(
title = "Controls",  width = 3, background = "light-blue",
dateRangeInput("dates_range",
start  = "2015-05-20",
end = Sys.Date() -1,
label = h3("Date range"))
),
box(
title = "Controls",  width = 3, background = "light-blue",
selectInput("selectStat", label = h3("选择指标"),
choices = list("加购率" = "加购率",
"平均加购金额" = "平均加购金额",
"点击率" = "点击率",
"订单用户占比" = "订单用户占比",
"点击uv" = "click_uv",
"uv" = "uv",
"加购买家数" = "add2cart_uv",
"加购支付买家数" = "ords",
"无线非生鲜下单用户数"="total_ords"
),
selected = "加购率")
)
)
),
# Second tab content
tabItem(tabName = "明细数据",
box(
title = "data", width = 10,
dataTableOutput('datashow')
)
)
)
)
)
server <- function(input, output) {
### 清洗数据，选择日期
clean_data <- function(data, date_range){
### 去除其他地区的
df = df[df["站点"] !="其他", ]
df$日期 = as.Date(df$日期, format="%Y%m%d")
start = input$dates_range[1]
date_end = input$dates_range[2]
selectdf = df[ df$日期 >= start & df$日期 <= date_end, ]
selectdf
}
### 增加指标
stat_data <- function(data){
g = group_by(data, 日期)
res = summarise(g,
uv = sum(uv),
click_uv = sum(点击uv),
add2cart_uv = sum(加购买家数),
add2cart_amt = sum(加购支付金额),
ords = sum(加购支付买家数),
total_ords = sum(无线非生鲜下单用户数)
)
res["加购率"] = res["add2cart_uv"] / res["uv"]
res["订单转换率"] = res["ords"] / res["add2cart_uv"]
res["平均加购金额"] = res["add2cart_amt"] / res["uv"]
res["点击率"] = res["click_uv"] / res["uv"]
res["订单用户占比"] = res["ords"] / res["total_ords"]
res["show_stat"] = res[input$selectStat]
res
}
output$add2cartRatePlot <- renderPlot({
selectdf = clean_data(data, input$dates_range)
res = stat_data(selectdf)
ggplot(res, aes(x=日期, y = show_stat ) ) +
geom_point(colour = 'red', size = 3) + geom_line(colour = "blue", size = 2)  + labs(x="date", y = input$selectStat, family="Kaiti")
})
output$datashow <- renderDataTable({
data
},options = list(aLengthMenu = c(5, 30, 50), iDisplayLength = 5))
}
shinyApp(ui, server)
title = "data", width = 12,
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "大家都在买"),
dashboardSidebar(
sidebarMenu(
menuItem("点击效果", tabName = "点击效果", icon = icon("dashboard")),
menuItem("明细数据", tabName = "明细数据", icon = icon("th"))
)
),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "点击效果",
fluidRow(
box(plotOutput("add2cartRatePlot", height = 500,width = 600)),
box(
title = "Controls",  width = 3, background = "light-blue",
dateRangeInput("dates_range",
start  = "2015-05-20",
end = Sys.Date() -1,
label = h3("Date range"))
),
box(
title = "Controls",  width = 3, background = "light-blue",
selectInput("selectStat", label = h3("选择指标"),
choices = list("加购率" = "加购率",
"平均加购金额" = "平均加购金额",
"点击率" = "点击率",
"订单用户占比" = "订单用户占比",
"点击uv" = "click_uv",
"uv" = "uv",
"加购买家数" = "add2cart_uv",
"加购支付买家数" = "ords",
"无线非生鲜下单用户数"="total_ords"
),
selected = "加购率")
)
)
),
# Second tab content
tabItem(tabName = "明细数据",
box(
title = "data", width = 12,
dataTableOutput('datashow')
)
)
)
)
)
server <- function(input, output) {
### 清洗数据，选择日期
clean_data <- function(data, date_range){
### 去除其他地区的
df = df[df["站点"] !="其他", ]
df$日期 = as.Date(df$日期, format="%Y%m%d")
start = input$dates_range[1]
date_end = input$dates_range[2]
selectdf = df[ df$日期 >= start & df$日期 <= date_end, ]
selectdf
}
### 增加指标
stat_data <- function(data){
g = group_by(data, 日期)
res = summarise(g,
uv = sum(uv),
click_uv = sum(点击uv),
add2cart_uv = sum(加购买家数),
add2cart_amt = sum(加购支付金额),
ords = sum(加购支付买家数),
total_ords = sum(无线非生鲜下单用户数)
)
res["加购率"] = res["add2cart_uv"] / res["uv"]
res["订单转换率"] = res["ords"] / res["add2cart_uv"]
res["平均加购金额"] = res["add2cart_amt"] / res["uv"]
res["点击率"] = res["click_uv"] / res["uv"]
res["订单用户占比"] = res["ords"] / res["total_ords"]
res["show_stat"] = res[input$selectStat]
res
}
output$add2cartRatePlot <- renderPlot({
selectdf = clean_data(data, input$dates_range)
res = stat_data(selectdf)
ggplot(res, aes(x=日期, y = show_stat ) ) +
geom_point(colour = 'red', size = 3) + geom_line(colour = "blue", size = 2)  + labs(x="date", y = input$selectStat, family="Kaiti")
})
output$datashow <- renderDataTable({
data
},options = list(aLengthMenu = c(5, 30, 50), iDisplayLength = 5))
}
shinyApp(ui, server)
setwd("~/Desktop/dashboard/")
shiny::runApp()
shiny::runApp()
shinyApp(ui, server)
source("global.R")
source("ui.R")
source("server.R")
shiny::runApp()
data <- rodps.load.table('tmcs_jx_djdzm_Rec_report')
library('RODPS')
data <- rodps.load.table('tmcs_jx_djdzm_Rec_report')
